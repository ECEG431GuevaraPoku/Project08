//Set up SP and call sys.init
@261
D=A
@SP
M=D
@Sys.init$ret.0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D-A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@SP
M=M-1
@SP
A=M
D=M
@Sys.init
D;JMP
(Sys.init$ret.0)
@Sys.init$ret.0
0;JMP
//function Sys.init 0
(Sys.init)
@0
D=A
@R15
M=D
@R14
M=0
(Sys.init$LOOP.1)
@R14
A=M
D=0
@SP
A=M
M=D
@SP
M=M+1
@R14
M=M+1
@R15
M=M-1
D=M
@Sys.init$LOOP.1
D;JGT
//push constant 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Main.fibonacci 1   // computes the 4'th fibonacci element
@Sys.init$ret.3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D-A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@SP
M=M-1
@SP
A=M
D=M
@Main.fibonacci
D;JMP
(Sys.init$ret.3)
//label WHILE
(Sys.init$WHILE)
//goto WHILE              // loops infinitely
@Sys.init$WHILE
0;JMP
